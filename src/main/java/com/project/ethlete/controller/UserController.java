package com.project.ethlete.controller;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.project.ethlete.domain.Country;
import com.project.ethlete.domain.User;
import com.project.ethlete.repository.CountryRepository;
import com.project.ethlete.repository.UserRepository;
import com.project.ethlete.service.UserService;
import com.project.ethlete.util.ResponseState;

@RestController
@RequestMapping(path="/user")
public class UserController {
	
	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private CountryRepository countryRepository;
	
	private Log log = LogFactory.getLog(UserController.class);

	
	@RequestMapping(path="/add", method=RequestMethod.POST)
	public String addNewUser (@RequestBody User user) {

		if(user.getCountry() != null && user.getCountry().getIsoCode() != null)
			user.setCountry(countryRepository.findFirstByIsoCode(user.getCountry().getIsoCode()));
		
		userRepository.save(user);
		return ResponseState.SUCCESS.name();
	}

	@GetMapping(path="/all")
	public Iterable<User> getAllUsers() {
		log.info("start getting all users.");

		// This returns a JSON or XML with the users
		Iterable<User> users = userService.findAll();
		log.info("end getting all users.");
		return users;
	}
	
	@RequestMapping(path="/delete", method=RequestMethod.POST)
	public String deleteUser(@RequestBody User user) {
		if(user != null && user.getEmployeeNo() != null) {
			userRepository.deleteByEmployeeNo(user.getEmployeeNo());
			return ResponseState.SUCCESS.name();
		}
		return ResponseState.FAIL.name();
		
	}
	
	@RequestMapping(path="/update_country", method=RequestMethod.POST)
	public String updateUserCountry(@RequestBody User user) {
		if(user != null && user.getCountry().getIsoCode() != null && user.getEmployeeNo() != null) {
			Country country = countryRepository.findFirstByIsoCode(user.getCountry().getIsoCode());
			userRepository.updateCountryByEmployeeNo(user.getEmployeeNo(), country);
			return ResponseState.SUCCESS.name();
		}
		return ResponseState.FAIL.name();
	}

}
